apiVersion: apps/v1
kind: Deployment
metadata:
  name: userprofile
  namespace: api
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: userprofile
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: userprofile
    spec:
      containers:
      - image: registryumr6730.azurecr.io/tripinsights/userprofile:1.0
        imagePullPolicy: IfNotPresent
        name: userprofile
        env:
        - name: SQL_USER
          valueFrom:
            secretKeyRef:
              name: sql-user
              key: SQLUSER
        - name: SQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sql-password
              key: SQLPASSWORD
        - name: SQL_SERVER
          valueFrom:
            secretKeyRef:
              name: sql-server
              key: SQLSERVER
        - name: SQL_DBNAME
          valueFrom:
            secretKeyRef:
              name: sql-dbname
              key: SQLDBNAME
        ports:
        - containerPort: 80
          name: userprofile
          protocol: TCP
        volumeMounts:
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
        resources: {}       
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: azure-kvname
          nodePublishSecretRef:
              name: secrets-store-creds
      dnsPolicy: ClusterFirst
      nodeSelector:
        beta.kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: userprofile
  namespace: api
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: userprofile
